
@if (!ShowAddDepartment) 
{
    return;
}
    <div class="department-container">
    
        <button class="btn close-window-btn" @onclick="@(()=>CloseWindowClick.InvokeAsync(DepartmentViewModel))"><i class="fa fa-remove"></i></button>
        <div class="card Department-card">

            <div class="card-body Department-card">
                <div class="d-flex">

                    @if (DepartmentViewModel?.Id == 0)
                    {
                        <h5 class="card-title register-card-titrle card-title-seperator">Add Department</h5>
                    }
                    else
                    {
                        <h5 class="card-title register-card-titrle card-title-seperator">Update Department</h5>
                    }


                </div>


                <EditForm Model="@DepartmentViewModel" method="post"  Context="formContext" >

                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <input type="hidden" @bind="@DepartmentViewModel.Id" />
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="input-group">

                                    <input type="text" class="form-control" @bind="@DepartmentViewModel.Name" placeholder="Department" />
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            @if (DepartmentViewModel?.Id == 0)
                            {

                                <input type="submit" value="Add" class="btn btn-primary" @onclick="@(()=>Onclick.InvokeAsync(formContext))" />
                            }
                            else
                            {
                                <input type="submit" value="Update" class="btn btn-primary"   @onclick="@(()=>Onclick.InvokeAsync(formContext))" />
                            }


                        </div>

                    </div>
                </EditForm>
            </div>
        </div>

    </div>
@code {

    [Parameter]
    public Entities.ViewModels.Departments.DepartmentViewModel DepartmentViewModel { get; set; }

    [Parameter]
    public bool ShowAddDepartment { get; set; }
   

    [Parameter]
    public EventCallback<EditContext> Onclick { get; set; }

    [Parameter]
    public EventCallback CloseWindowClick { get; set; }

    [Parameter]
    public EventCallback HandleValidSumbit { get; set; }

  



}
