
@if (!ShowAddRole)
{
    return;
}
    <div class="add-role-wrapper p-1">
        <button class="btn close-window-btn" @onclick="@(() => CloseWindowClick.InvokeAsync(CreateRoleViewModel))"><i class="fa fa-remove"></i></button>
        <div class="card">
           
            <div class="card-body">
                <div class="d-flex">

                    @if (CreateRoleViewModel.RoleId == 0)
                    {
                        <h5 class="card-title register-card-titrle card-title-seperator">Add Role</h5>
                    }
                    else
                    {
                        <h5 class="card-title register-card-titrle card-title-seperator">Update Role</h5>
                    }


                </div>

                <EditForm method="post" Model="@CreateRoleViewModel" Context="formContext">
                    <input type="hidden" @bind="@CreateRoleViewModel.RoleId" />
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="input-group">

                                    <input type="text" @bind="@CreateRoleViewModel.RoleName" class="form-control" placeholder="Role Name" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="input-group">
                                    @if (CreateRoleViewModel?.RoleId == 0)
                                    {
                                        <button type="button" class="btn btn-primary" @onclick="(() => Onclick.InvokeAsync(formContext))">Add</button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-primary" @onclick="(() => Onclick.InvokeAsync(formContext))">Update</button>
                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                   
                </EditForm>
            </div>
           
        </div>


    </div>

@code
{
    [Parameter]
    public Entities.ViewModels.CreateRoleViewModel CreateRoleViewModel { get; set; }

    [Parameter]
    public bool ShowAddRole { get; set; }


    [Parameter]
    public EventCallback<EditContext> Onclick { get; set; }

    [Parameter]
    public EventCallback CloseWindowClick { get; set; }

    [Parameter]
    public EventCallback HandleValidSumbit { get; set; }
}
